import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { FormProvider, useForm } from "react-hook-form";
// import { useFirestoreDocumentData } from "@react-query-firebase/firestore";
// import { firestore } from "../api";
// import { doc } from "firebase/firestore";
import FormInput from "../components/FormInput";
import { schema } from "../../schema";
import { yupResolver } from "@hookform/resolvers/yup";
import { Box, Button, Center, HStack, Text } from "@chakra-ui/react";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const [hasResponse, setHasResponse] = useState(false);
  // const ref = doc(firestore, "collection", "document");
  // const { data }: { data?: { field: string } } = useFirestoreDocumentData(
  //   ["products", "documents"],
  //   ref
  // );

  // useEffect(() => {
  //   router.push("/home");
  // }, []);

  const methods = useForm({
    reValidateMode: "onChange",
    resolver: yupResolver(schema),
    defaultValues: {
      input: "",
    },
  });

  const sendMessage = (values: any) => {
    if (values.input) {
      setHasResponse(true);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Center flexDir="column" h="100vh">
          <FormProvider {...methods}>
            <Box display="flex" flexDir="row">
              <Box display="flex" alignItems="center" justifyContent="center">
                <Box>
                  <Text mb="2">How are you feeling</Text>
                  <FormInput id="input" />
                </Box>
              </Box>
              <Button
                ml={4}
                bg="blue.500"
                color="white"
                padding={1}
                rounded="md"
                onClick={methods.handleSubmit(sendMessage)}
                type="submit"
              >
                Submit
              </Button>
            </Box>
          </FormProvider>

          {hasResponse && <Text mt={20}>Success</Text>}
        </Center>
      </main>
    </>
  );
}
